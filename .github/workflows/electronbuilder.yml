name: Electron Build on Tag (Windows)

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: windows-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install jq
      run: choco install jq
    - name: Set package.json version to tag name
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        echo "Current Tag: $TAG_NAME"
        jq ".version=\"$TAG_NAME\"" package.json > tmp.json && mv tmp.json package.json
      shell: bash
    - name: Install dependencies
      run: yarn install

    - name: Build Electron App for Windows
      run: yarn electron-build-win

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: electron-installer
        path: dist/*.exe

    - name: Create GitHub Release
      id: create_release
      uses: gh-actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get artifact name
      id: get_filename
      run: |
        echo "::set-output name=filename::$(ls dist/*.exe)"

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.get_filename.outputs.filename }}
        asset_name: ${{ steps.get_filename.outputs.filename }}
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


