name: Electron Build on Tag

permissions:
  contents: write

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            build-command: yarn electron-build-win
            artifact-type: exe
          - os: macos-latest
            build-command: yarn electron-build-mac
            artifact-type: dmg
#          - os: ubuntu-latest
#            build-command: yarn electron-build-linux
#            artifact-type: AppImage

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install jq (Windows only)
      if: matrix.os == 'windows-latest'
      run: choco install jq

    - name: Set package.json version to tag name
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        echo "Current Tag: $TAG_NAME"
        jq ".version=\"$TAG_NAME\"" package.json > tmp.json && mv tmp.json package.json
      shell: bash

    - name: Install dependencies
      run: yarn install

    - name: Build Electron App
      run: ${{ matrix.build-command }}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: electron-installer-${{ matrix.os }}
        path: dist/*.${{ matrix.artifact-type }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download all artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Create Release and Upload Artifacts
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/electron-installer-windows-latest/*.exe
          artifacts/electron-installer-macos-latest/*.dmg
#          artifacts/electron-installer-ubuntu-latest/*.AppImage
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
